// <auto-generated />
using System;
using CulturaVivaTours.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CulturaVivaTours.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PuntoInteresid")
                        .HasColumnType("int");

                    b.Property<int?>("TuristaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PuntoInteresid");

                    b.HasIndex("TuristaId");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Guia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cedula")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Guias");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.PuntoInteres", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("HorarioEstimado")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<int?>("Proveedorid")
                        .HasColumnType("int");

                    b.Property<int?>("RutaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoActividad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("Proveedorid");

                    b.HasIndex("RutaId");

                    b.ToTable("PuntosInteres");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Experience")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Time")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.RutaAsignada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GuiaId")
                        .HasColumnType("int");

                    b.Property<int?>("RutaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuiaId");

                    b.HasIndex("RutaId");

                    b.ToTable("RutasAsignadas");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Turista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Disponibility")
                        .HasMaxLength(40)
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("RestringFood")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Turistas");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Calificacion", b =>
                {
                    b.HasOne("CulturaVivaTours.Shared.Entities.PuntoInteres", "PuntoInteres")
                        .WithMany("Calificaciones")
                        .HasForeignKey("PuntoInteresid");

                    b.HasOne("CulturaVivaTours.Shared.Entities.Turista", "Turista")
                        .WithMany("Calificaciones")
                        .HasForeignKey("TuristaId");

                    b.Navigation("PuntoInteres");

                    b.Navigation("Turista");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.PuntoInteres", b =>
                {
                    b.HasOne("CulturaVivaTours.Shared.Entities.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("Proveedorid");

                    b.HasOne("CulturaVivaTours.Shared.Entities.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaId");

                    b.Navigation("Proveedor");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.RutaAsignada", b =>
                {
                    b.HasOne("CulturaVivaTours.Shared.Entities.Guia", "Guia")
                        .WithMany("RutasAsignadas")
                        .HasForeignKey("GuiaId");

                    b.HasOne("CulturaVivaTours.Shared.Entities.Ruta", "Ruta")
                        .WithMany("RutasAsignadas")
                        .HasForeignKey("RutaId");

                    b.Navigation("Guia");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Guia", b =>
                {
                    b.Navigation("RutasAsignadas");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.PuntoInteres", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Ruta", b =>
                {
                    b.Navigation("RutasAsignadas");
                });

            modelBuilder.Entity("CulturaVivaTours.Shared.Entities.Turista", b =>
                {
                    b.Navigation("Calificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
