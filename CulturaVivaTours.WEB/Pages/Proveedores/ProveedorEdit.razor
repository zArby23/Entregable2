@using CulturaVivaTours.Shared.Entities
@using CurrieTechnologies.Razor.SweetAlert2
@using CulturaVivaTours.WEB.Repositories

@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService swal


@code 
{
    private Proveedor proveedor;
    private ProveedorForm proveedorForm;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHTTP = await repository.GetAsync<Proveedor>($"/api/Proveedores/{Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("Proveedor");
            }
            else
            {
                var messageError = await responseHTTP.GetErrorMessage();
                await swal.FireAsync("Error", messageError, SweetAlertIcon.Error);
            }
        }
        else
        {
            proveedor = responseHTTP.Response;
        }
    }

    private async Task Edit()
    {
        var responseHTTP = await repository.PutAsync("/api/owners", proveedor);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessage();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {

            navigationManager.NavigateTo("/Proveedores");
        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("/Proveedores");
    }
}

}
